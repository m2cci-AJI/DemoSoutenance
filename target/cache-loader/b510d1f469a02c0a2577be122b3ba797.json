{"remainingRequest":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\tslint-loader\\index.js!C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\src\\main\\webapp\\app\\layouts\\navbar\\navbar.component.ts","dependencies":[{"path":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\src\\main\\webapp\\app\\layouts\\navbar\\navbar.component.ts","mtime":1567079184951},{"path":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar ngx_webstorage_1 = require(\"ngx-webstorage\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar core_2 = require(\"app/core\");\r\nvar profile_service_1 = require(\"app/layouts/profiles/profile.service\");\r\nvar NavbarComponent = /** @class */ (function () {\r\n    function NavbarComponent(loginService, languageService, languageHelper, sessionStorage, accountService, loginModalService, profileService, router) {\r\n        this.loginService = loginService;\r\n        this.languageService = languageService;\r\n        this.languageHelper = languageHelper;\r\n        this.sessionStorage = sessionStorage;\r\n        this.accountService = accountService;\r\n        this.loginModalService = loginModalService;\r\n        this.profileService = profileService;\r\n        this.router = router;\r\n        this.version = app_constants_1.VERSION ? 'v' + app_constants_1.VERSION : '';\r\n        this.isNavbarCollapsed = true;\r\n    }\r\n    NavbarComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.languageHelper.getAll().then(function (languages) {\r\n            _this.languages = languages;\r\n        });\r\n        this.profileService.getProfileInfo().then(function (profileInfo) {\r\n            _this.inProduction = profileInfo.inProduction;\r\n            _this.swaggerEnabled = profileInfo.swaggerEnabled;\r\n        });\r\n    };\r\n    NavbarComponent.prototype.changeLanguage = function (languageKey) {\r\n        this.language = languageKey;\r\n        this.sessionStorage.store('locale', languageKey);\r\n        this.languageService.changeLanguage(languageKey);\r\n    };\r\n    NavbarComponent.prototype.collapseNavbar = function () {\r\n        this.isNavbarCollapsed = true;\r\n    };\r\n    NavbarComponent.prototype.isAuthenticated = function () {\r\n        return this.accountService.isAuthenticated();\r\n    };\r\n    NavbarComponent.prototype.login = function () {\r\n        this.modalRef = this.loginModalService.open();\r\n    };\r\n    NavbarComponent.prototype.logout = function () {\r\n        this.collapseNavbar();\r\n        this.loginService.logout();\r\n        this.router.navigate(['']);\r\n    };\r\n    NavbarComponent.prototype.toggleNavbar = function () {\r\n        this.isNavbarCollapsed = !this.isNavbarCollapsed;\r\n    };\r\n    NavbarComponent.prototype.getImageUrl = function () {\r\n        return this.isAuthenticated() ? this.accountService.getImageUrl() : null;\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    NavbarComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-navbar',\r\n            templateUrl: './navbar.component.html',\r\n            styleUrls: ['navbar.css']\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.LoginService !== \"undefined\" && core_2.LoginService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiLanguageService !== \"undefined\" && ng_jhipster_1.JhiLanguageService) === \"function\" ? _b : Object, typeof (_c = typeof core_2.JhiLanguageHelper !== \"undefined\" && core_2.JhiLanguageHelper) === \"function\" ? _c : Object, typeof (_d = typeof ngx_webstorage_1.SessionStorageService !== \"undefined\" && ngx_webstorage_1.SessionStorageService) === \"function\" ? _d : Object, typeof (_e = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _e : Object, typeof (_f = typeof core_2.LoginModalService !== \"undefined\" && core_2.LoginModalService) === \"function\" ? _f : Object, typeof (_g = typeof profile_service_1.ProfileService !== \"undefined\" && profile_service_1.ProfileService) === \"function\" ? _g : Object, typeof (_h = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _h : Object])\r\n    ], NavbarComponent);\r\n    return NavbarComponent;\r\n}());\r\nexports.NavbarComponent = NavbarComponent;\r\n",{"version":3,"file":"C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\src\\main\\webapp\\app\\layouts\\navbar\\navbar.component.ts","sourceRoot":"","sources":["C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\node_modules\\tslint-loader\\index.js!C:\\Users\\AJE18508\\Documents\\open_chargeplan2\\src\\main\\webapp\\app\\layouts\\navbar\\navbar.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,0CAAyC;AAEzC,2CAAiD;AACjD,iDAAuD;AAEvD,mDAA4C;AAC5C,iCAA8F;AAC9F,wEAAsE;AAQtE;IASI,yBACY,YAA0B,EAC1B,eAAmC,EACnC,cAAiC,EACjC,cAAqC,EACrC,cAA8B,EAC9B,iBAAoC,EACpC,cAA8B,EAC9B,MAAc;QAPd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAoB;QACnC,mBAAc,GAAd,cAAc,CAAmB;QACjC,mBAAc,GAAd,cAAc,CAAuB;QACrC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,OAAO,GAAG,uBAAO,CAAC,CAAC,CAAC,GAAG,GAAG,uBAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,kCAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAA,SAAS;YACvC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAA,WAAW;YACjD,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;YAC7C,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;QACrD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAc,GAAd,UAAe,WAAmB;QAC9B,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACrD,CAAC;IAED,wCAAc,GAAd;QACI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,yCAAe,GAAf;QACI,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IACjD,CAAC;IAED,+BAAK,GAAL;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClD,CAAC;IAED,gCAAM,GAAN;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAY,GAAZ;QACI,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;IACrD,CAAC;IAED,qCAAW,GAAX;QACI,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7E,CAAC;;IAhEQ,eAAe;QAL3B,gBAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,yBAAyB;YACtC,SAAS,EAAE,CAAC,YAAY,CAAC;SAC5B,CAAC;qEAW4B,mBAAY,oBAAZ,mBAAY,oDACT,gCAAkB,oBAAlB,gCAAkB,oDACnB,wBAAiB,oBAAjB,wBAAiB,oDACjB,sCAAqB,oBAArB,sCAAqB,oDACrB,qBAAc,oBAAd,qBAAc,oDACX,wBAAiB,oBAAjB,wBAAiB,oDACpB,gCAAc,oBAAd,gCAAc,oDACtB,eAAM,oBAAN,eAAM;OAjBjB,eAAe,CAiE3B;IAAD,sBAAC;CAAA,AAjED,IAiEC;AAjEY,0CAAe","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { JhiLanguageService } from 'ng-jhipster';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\n\r\nimport { VERSION } from 'app/app.constants';\r\nimport { AccountService, JhiLanguageHelper, LoginModalService, LoginService } from 'app/core';\r\nimport { ProfileService } from 'app/layouts/profiles/profile.service';\r\nimport { NgStyle } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'jhi-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['navbar.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n    inProduction: boolean;\r\n    isNavbarCollapsed: boolean;\r\n    languages: any[];\r\n    public language: any;\r\n    swaggerEnabled: boolean;\r\n    modalRef: NgbModalRef;\r\n    version: string;\r\n\r\n    constructor(\r\n        private loginService: LoginService,\r\n        private languageService: JhiLanguageService,\r\n        private languageHelper: JhiLanguageHelper,\r\n        private sessionStorage: SessionStorageService,\r\n        private accountService: AccountService,\r\n        private loginModalService: LoginModalService,\r\n        private profileService: ProfileService,\r\n        private router: Router\r\n    ) {\r\n        this.version = VERSION ? 'v' + VERSION : '';\r\n        this.isNavbarCollapsed = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.languageHelper.getAll().then(languages => {\r\n            this.languages = languages;\r\n        });\r\n\r\n        this.profileService.getProfileInfo().then(profileInfo => {\r\n            this.inProduction = profileInfo.inProduction;\r\n            this.swaggerEnabled = profileInfo.swaggerEnabled;\r\n        });\r\n    }\r\n\r\n    changeLanguage(languageKey: string) {\r\n        this.language = languageKey;\r\n        this.sessionStorage.store('locale', languageKey);\r\n        this.languageService.changeLanguage(languageKey);\r\n    }\r\n\r\n    collapseNavbar() {\r\n        this.isNavbarCollapsed = true;\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return this.accountService.isAuthenticated();\r\n    }\r\n\r\n    login() {\r\n        this.modalRef = this.loginModalService.open();\r\n    }\r\n\r\n    logout() {\r\n        this.collapseNavbar();\r\n        this.loginService.logout();\r\n        this.router.navigate(['']);\r\n    }\r\n\r\n    toggleNavbar() {\r\n        this.isNavbarCollapsed = !this.isNavbarCollapsed;\r\n    }\r\n\r\n    getImageUrl() {\r\n        return this.isAuthenticated() ? this.accountService.getImageUrl() : null;\r\n    }\r\n}\r\n"]}]}